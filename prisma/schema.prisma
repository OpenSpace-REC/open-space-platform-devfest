// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
  

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                String         @id @default(uuid())
  googleId          String         @unique
  name              String
  bio               String?
  email             String         @unique
  githubUsername    String        @unique
  githubProfileUrl  String?
  githubAvatarUrl   String?
  rank              Int            @default(0)
  joinDate          DateTime       @default(now())
  projects          ProjectUser[]
}


model Project {
  id                String               @id @default(uuid())
  name              String
  description       String?
  problemStatement  String?              
  githubUrl         String               @unique
  demoUrl           String?              
  techStack         String[]
  imageUrl          String?
  status            String               
  projectType       String               
  keyFeatures       String[]             
  academicHighlights Json[]             
  projectImages     ProjectImage[]       
  users             ProjectUser[]
  pendingUsers      PendingProjectUser[]
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
}

model ProjectUser {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  role      String
  
  @@unique([userId, projectId])
}

model PendingProjectUser {
  id              String   @id @default(uuid())
  githubUsername  String
  project         Project  @relation(fields: [projectId], references: [id])
  projectId       String
  role            String

  @@unique([githubUsername, projectId])
}

model ProjectImage {
  id          String   @id @default(uuid())
  title       String
  description String
  url         String
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([projectId])
}